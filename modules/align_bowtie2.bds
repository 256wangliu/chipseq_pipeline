#!/usr/bin/env bds

include "species.bds"


help == align bowtie2 settings (requirements: -bwt2_idx)
//help *resources :
nth_bwt2	:= 2 			help # threads for bowtie2 (default: 2).
wt_bwt2		:= "20h"		help Walltime for bowtie2 (default: 20h, 20:00:00).
mem_bwt2	:= "12G"	 	help Max. memory for bowtie2 (default: 8G).


init_align_bwt2()


void init_align_bwt2() {

	if ( conf_file_exists() ) {
		nth_bwt2 	= get_conf_val_int( nth_bwt2,		["nthreads_bwt2", "nth_bwt2", "cpu_bwt2", "numthreads"] )
		wt_bwt2 	= get_conf_val( wt_bwt2, 		["walltime_bwt2", "wt_bwt2", "timeout_bwt2"] )
		mem_bwt2 	= get_conf_val( mem_bwt2, 		["memory_bwt2", "mem_bwt2"] )
	}

	print("\n\n== align bowtie2 settings\n")
	print( "# threads (bowtie2)\t: $nth_bwt2\n")
	print( "Walltime (bowtie2)\t: $wt_bwt2\n")
	print( "Max. memory (bowtie2)\t: $mem_bwt2\n")
}

void chk_align_bwt2() {

	if ( !path_exists("$bwt2_idx.1.bt2") ) error("Bowtie2 index (-bwt2_idx) doesn't exists! (file: $bwt2_idx.1.bt2)\n")
}

string[] _bowtie2( string fastq, string out_dir, string info ) {

	prefix 	:= change_dir( remove_ext( fastq, ["fastq","fq"] ), out_dir )

	bam 	:= "$prefix.bam"
	log 	:= "$prefix.align.log"

	in 	:= [ fastq ]
	out 	:= [ bam, log ]

	task( taskName:= "bowtie2 "+info, \
		cpus:=nth_bwt2, mem:=parse_mem_or_skip(mem_bwt2), timeout:=parse_time_or_skip(wt_bwt2), \
		out<-in ) {

		sys $SHCMD_INIT

		sys bowtie2 -x $bwt2_idx --threads $nth_bwt2 -U <(zcat -f $fastq) -S /dev/stdout 2> $log | \
    			samtools view -o $bam -b /dev/stdin
	}

	wait_par()

	return out
}

string[] _bowtie2_PE( string fastq1, string fastq2, string out_dir, string info ) {

	prefix 	:= change_dir( remove_ext( fastq1, ["fastq","fq"] ), out_dir ) + ".PE2SE"

	bam 	:= "$prefix.bam"
	log 	:= "$prefix.align.log"

	in 	:= [ fastq1, fastq2 ]
	out 	:= [ bam, log ]

	task( taskName:= "bowtie2_PE "+info, \
		cpus:=nth_bwt2, mem:=parse_mem_or_skip(mem_bwt2), timeout:=parse_time_or_skip(wt_bwt2), \
		out<-in ) {

		sys $SHCMD_INIT

		sys bowtie2 -X2000 --mm --threads $nth_bwt2 -x $bwt2_idx \
			-1 $fastq1 -2 $fastq2 \
			2>$log | \
			samtools view -bS - > $bam
	}

	wait_par()

	return out
}
