#!/usr/bin/env bds

include "species.bds"


// has functions related to tagalign, and helps getting tagalign from configruation file or command line argument

help Tagalign definition
help      To define tagalign use '-tag[REP_NO]', For control use '-ctl_tag[REP_NO]'


string get_tag( int ctl, int rep ) {

	key := ( ctl > 0 ? "ctl_tag" : "tag" ) + "_rep" + rep
	key2 := ( ctl > 0 ? "ctl_tagalign" : "tagalign" ) + "_rep" + rep

	key3 := ( ctl > 0 ? "ctl_tag" : "tag" ) + rep
	key4 := ( ctl > 0 ? "ctl_tagalign" : "tagalign" ) + rep

	key5 := ( ctl > 0 ? "ctl_tag" : "tag" )
	key6 := ( ctl > 0 ? "ctl_tagalign" : "tagalign" )

	if ( cmd_line_arg_has_key( key ) ) {
		return get_cmd_line_arg_val( key )
	}
	else if ( cmd_line_arg_has_key( key2 ) ) {
		return get_cmd_line_arg_val( key2 )
	}
	else if ( cmd_line_arg_has_key( key3 ) ) {
		return get_cmd_line_arg_val( key3 )
	}
	else if ( cmd_line_arg_has_key( key4 ) ) {
		return get_cmd_line_arg_val( key4 )
	}
	else if ( (rep==1) && cmd_line_arg_has_key( key5 ) ) {
		return get_cmd_line_arg_val( key5 )
	}
	else if ( (rep==1) && cmd_line_arg_has_key( key6 ) ) {
		return get_cmd_line_arg_val( key6 )
	}
	else if ( conf.hasKey( key ) ) {
		return get_path( conf{ key } )
	}
	else if ( conf.hasKey( key2 ) ) {
		return get_path( conf{ key2 } )
	}
	else if ( conf.hasKey( key3 ) ) {
		return get_path( conf{ key3 } )
	}
	else if ( conf.hasKey( key4 ) ) {
		return get_path( conf{ key4 } )
	}
	else if ( (rep==1) && conf.hasKey( key5 ) ) {
		return get_path( conf{ key5 } )
	}
	else if ( (rep==1) && conf.hasKey( key6 ) ) {
		return get_path( conf{ key6 } )
	}
	return ""
}

bool is_tag_paired_end( int ctl, int rep ) {

	key := ( ctl > 0 ? "ctl_tag" : "tag" ) + rep + "_pe"
	key_wo_rep := ( ctl > 0 ? "ctl_tag" : "tag" ) + "_pe"

	if ( cmd_line_arg_has_key( key ) ) {
		val := get_cmd_line_arg_val( key )
		return (val=="") || (val.parseBool())
	}
	else if ( (rep==1) && cmd_line_arg_has_key( key_wo_rep ) ) {
		val := get_cmd_line_arg_val( key_wo_rep )
		return (val=="") || (val.parseBool())
	}
	else if ( conf.hasKey( key ) ) {
		return conf{ key }.parseBool()
	}
	else if ( (rep==1) && conf.hasKey( key_wo_rep ) ) {
		return conf{ key_wo_rep }.parseBool()
	}

	return false
}

bool is_tag_single_ended( int ctl, int rep ) {

	return !is_tag_paired_end( ctl, rep )
}

bool is_tag_PE( int ctl, int rep ) {

	return is_tag_paired_end( ctl, rep )
}

bool is_tag_SE( int ctl, int rep ) {

	return is_tag_single_ended( ctl, rep )
}

int get_num_rep_tag() {

	rep := 1

	while( get_tag( 0, rep ) != "" ) rep++

	return rep-1
}