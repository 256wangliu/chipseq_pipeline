#!/usr/bin/env bds

include "species.bds"


help Narrow peak definition for IDR, to define narrow peak files:
help     For true replicates, use '-peak[REP_NO]',
help     For pooled replicates, use '-peak_pooled',
help     For two PR (pseudo-replicates), use '-peak[REP_NO]_1' and '-peak[REP_NO]_2',
help     For two PPR (pooled pseudo-replicates), use '-peak_ppr1' and '-peak_ppr2',


string get_peak( int rep, int pse ) { // rep==0 : pooled peak, pse==0 : true replicate

	if ( pse > 2 ) error ("\nget_peak() : pse should not be larger than 2!")

	string key, key2
	if ( rep == 0 ) {
		key 	= ( pse == 0 ? "peak_pooled" : ("peak_ppr" + pse) )
		key2 	= key
	}
	else {
		key 	= "peak"     + rep + ( pse == 0 ? "" : ("_pr" + pse) )
		key2 	= "peak_rep" + rep + ( pse == 0 ? "" : ("_pr" + pse) )
	}

	if ( cmd_line_arg_has_key( key ) ) {
		return get_cmd_line_arg_val( key )
	}
	else if ( cmd_line_arg_has_key( key2 ) ) {
		return get_cmd_line_arg_val( key2 )
	}
	else if ( conf.hasKey( key ) ) {
		return get_path( conf{ key } )
	}
	else if ( conf.hasKey( key2 ) ) {
		return get_path( conf{ key2 } )
	}

	return ""
}

bool can_do_idr_for_true_rep() {
	return get_peak( 0, 0 ) != "" && get_peak( 1, 0 ) != "" && get_peak( 2, 0 ) != ""
}

bool can_do_idr_for_pseudo_rep( int rep ) {
	return get_peak( rep, 1 ) != "" && get_peak( rep, 2 ) != "" && get_peak( rep, 0 ) != ""
}

bool can_do_idr_for_pooled_pseudo_rep() {
	return get_peak( 0, 1 ) != "" && get_peak( 0, 2 ) != "" && get_peak( 0, 0 ) != ""
}
